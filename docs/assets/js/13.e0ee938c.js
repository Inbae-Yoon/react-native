(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{145:function(t,a,e){"use strict";e.r(a);e(72);var i=e(0),o=Object(i.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"aspectratio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aspectratio","aria-hidden":"true"}},[t._v("#")]),t._v(" aspectRatio")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://facebook.github.io/react-native/docs/layout-props#aspectratio",target:"_blank",rel:"noopener noreferrer"}},[t._v("aspectRatio"),e("OutboundLink")],1),t._v("는 노드의 크기가 정해지지 않은 경우 크기를 제어하는 속성입니다.\nCSS에는 없는 속성입니다.")]),t._v(" "),e("ul",[e("li",[t._v("설정 가능한 값은 0보다 큰 부동 소수 점(예: 1.432, 2 등) 입니다.")]),t._v(" "),e("li",[t._v("노드의 크기 사이의 비율(width:height)을 조정합니다. 예를 들어 aspectRatio 값이 2일 경우, width:height = 2:1 이 됩니다.")]),t._v(" "),e("li",[t._v("아이템에 설정된 min / max 값이 보존 됩니다.")]),t._v(" "),e("li",[t._v("flexGrow 속성보다 우선 순위가 높습니다. (aspectRatio > flexGrow)")]),t._v(" "),e("li",[t._v("aspectRatio, width, heigth 속성이 설정되면, 교차 축(Cross Axis) 값을 재정의 합니다.")])]),t._v(" "),e("div",{staticClass:"warning custom-block"},[e("p",[t._v("Yoga Layout 인터랙션 실습은 현재 모바일 환경에서 지원하지 않습니다.")])]),t._v(" "),e("iframe-wrapper",{attrs:{src:"https://yogalayout.com/docs/aspect-ratio",ratio:"16:10.5"}})],1)},[],!1,null,"1d78ee4e",null);a.default=o.exports},35:function(t,a,e){},72:function(t,a,e){"use strict";var i=e(35);e.n(i).a}}]);