(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{157:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"라이브러리-시작하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#라이브러리-시작하기","aria-hidden":"true"}},[t._v("#")]),t._v(" 라이브러리 시작하기")]),t._v(" "),n("p",[t._v('웹 브라우저에서 페이지 간 이동은 <a href="url"> 요소를 사용합니다. 사용자가 <a href="url"> 요소를 클릭하면 URL이 브라우저 히스토리 스택(history stack)으로 푸시(push) 됩니다.\n사용자가 뒤로 가기(back) 버튼을 누르면 브라우저는 히스토리 스택에서 마지막에 쌓인 아이템을 팝업(pop-up)하므로 이전 페이지로 이동됩니다.\n하지만 React Native는 웹 브라우저와 같은 글로벌 히스토리 스택에 대한 개념이 없습니다.')]),t._v(" "),n("p",[t._v("React Navigation의 스택 네비게이터는 앱이 화면 간 이동하고, 내비게이션 스택을 관리 할 수 있는 방법을 제공합니다. 앱에서 스택 내비게이터를 하나만 사용할 경우\n웹 브라우저에서 내비게이션 상태를 처리하는 방법과 개념적으로 유사합니다. 사용자가 앱과 인터랙션 할 때 React Navigation이 내비게이션 스택에서 쌓인 아이템을\n푸시(push), 팝(pop) 하여 사용자에게 다른 화면을 제공합니다.")]),t._v(" "),n("p",[t._v("웹 브라우저와 React Navigation의 주요 차이점은 React Navigation의 스택 네비게이터가 스택의 경로를 탐색 할 때 네이티브 모바일 플랫폼(Android, iOS)에서\n기대 할 제스처와 애니메이션을 제공한다는 점입니다.")]),t._v(" "),n("base-img",{staticStyle:{"max-width":"110px",margin:"3rem auto 1rem"},attrs:{src:"react-navigation-logo.png"}}),t._v(" "),n("h2",{attrs:{id:"스택-내비게이터와-앱-컨테이너"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#스택-내비게이터와-앱-컨테이너","aria-hidden":"true"}},[t._v("#")]),t._v(" 스택 내비게이터와 앱 컨테이너")]),t._v(" "),n("p",[t._v("React Navigation 모듈의 createStackNavigator() 함수는 "),n("a",{attrs:{href:"https://reactnavigation.org/docs/en/stack-navigator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("스택 내비게이터(StackNavigator)"),n("OutboundLink")],1),t._v("를 생성하고,\ncreateAppContainer() 함수는 "),n("a",{attrs:{href:"https://reactnavigation.org/docs/en/app-containers.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("앱 컨테이너(AppContainer)"),n("OutboundLink")],1),t._v("를 생성합니다. 필요한 각 함수를 불러옵니다.")]),t._v(" "),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// App.js")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createStackNavigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createAppContainer "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-navigation'")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("createStackNavigator() 함수의 전달 인자로 라우트 설정(RouteConfigs) 하여 스택 내비게이터를 생성한 후,\ncreateAppContainer() 함수에 생성된 스택 내비게이터 참조를 설정합니다. 그리고 생성된 앱 컨테이너 모듈을\n기본 내보내기 하도록 코드를 작성합니다.")]),t._v(" "),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// App.js")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 홈 스크린에 표시 할 컴포넌트")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" WonjuReview "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'components/WonjuReview'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 스택 내비게이터 생성")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" AppNavigator "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStackNavigator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 홈 스크린 라우트")]),t._v("\n  Home"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" screen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" WonjuReview "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 앱 컨테이너에 스택 내비게이터를 전달해 내보내기")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createAppContainer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AppNavigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br")])]),n("p",[t._v("스택 내비게이터와 앱 컨테이너를 적용한 코드를 저장한 후, 앱을 시뮬레이션 하면 화면에 정상적으로 리뷰 리스트가 출력됩니다.\n하지만 상단에 빈 공간이 생기는데 이 공간은 스택 내비게이터 헤더 바(header bar)가 추가되었기 때문입니다.")]),t._v(" "),n("base-img",{staticStyle:{"max-width":"400px","margin-left":"0"},attrs:{src:"react-navigation-01.png"}}),t._v(" "),n("br"),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",[t._v("홈 스크린의 헤더 바를 제거하려면 "),n("router-link",{attrs:{to:"/guidebook/rnn-navigation-options.html"}},[t._v("내비게이션 옵션")]),t._v("을 사용해야 합니다.")],1)]),t._v(" "),n("h2",{attrs:{id:"navigation-속성"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#navigation-속성","aria-hidden":"true"}},[t._v("#")]),t._v(" navigation 속성")]),t._v(" "),n("p",[t._v("홈 스크린 컴포넌트인 WonjuReview의 렌더 메서드 내부에 debugger를 추가한 후, React Native Debugger - Source 패널을 확인하면\n홈 스크린 컴포넌트의 props 속성에 navigation이 설정된 것을 볼 수 있습니다. 이 속성은 StackNavigator의 "),n("a",{attrs:{href:"https://reactnavigation.org/docs/en/navigation-prop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("navigation"),n("OutboundLink")],1),t._v(" 전달 속성(prop) 입니다.\n내부에는 "),n("a",{attrs:{href:"https://reactnavigation.org/docs/en/navigation-prop.html#navigate-link-to-other-screens",target:"_blank",rel:"noopener noreferrer"}},[t._v("navigate()"),n("OutboundLink")],1),t._v(" 메서드를 볼 수 있는데 이 메서드는 다른 스크린으로 이동할 때 사용합니다.")]),t._v(" "),n("base-img",{staticStyle:{border:"1px solid #e0e0e0"},attrs:{src:"navigate-debugger.png"}})],1)},[],!1,null,null,null);a.default=e.exports}}]);