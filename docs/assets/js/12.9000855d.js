(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{148:function(t,e,a){"use strict";a.r(e);a(71);var r=a(0),n=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"alignitems-alignself"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alignitems-alignself","aria-hidden":"true"}},[t._v("#")]),t._v(" alignItems / alignSelf")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://facebook.github.io/react-native/docs/layout-props#alignitems",target:"_blank",rel:"noopener noreferrer"}},[t._v("alignItems"),a("OutboundLink")],1),t._v(" 속성은 Flexbox 교차 축(Cross Axis) 기준으로 아이템에 일괄적으로 배치하는 유형을 설정합니다. (Flex Container에 설정)"),a("br"),t._v("\n개별 아이템에 직접 배치 설정하려면 "),a("a",{attrs:{href:"https://facebook.github.io/react-native/docs/layout-props#alignself",target:"_blank",rel:"noopener noreferrer"}},[t._v("alignSelf"),a("OutboundLink")],1),t._v(" 속성을 사용합니다. (Flex Item에 설정)")]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",[t._v("Yoga Layout 인터랙션 실습은 현재 모바일 환경에서 지원하지 않습니다.")])]),t._v(" "),a("iframe-wrapper",{attrs:{src:"https://yogalayout.com/docs/align-items",ratio:"16:13"}})],1)},[],!1,null,"6d16b066",null);e.default=n.exports},34:function(t,e,a){},71:function(t,e,a){"use strict";var r=a(34);a.n(r).a}}]);