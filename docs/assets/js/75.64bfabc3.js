(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{156:function(t,a,e){"use strict";e.r(a);var r=e(0),n=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"내비게이션-라이브러리"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#내비게이션-라이브러리","aria-hidden":"true"}},[t._v("#")]),t._v(" 내비게이션 라이브러리")]),t._v(" "),e("p",[t._v("React Native에는 앱 화면 간 이동하는 내비게이션 모듈이 포함되어 있지 않습니다.\n하지만 사용 가능한 내비게이션 라이브러리를 선택 확장하여 사용할 수 있습니다. React Native 앱을\n내비게이션 할 수 있도록 도와주는 라이브러리는 다음과 같습니다.")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://reactnavigation.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Navigation"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://wix.github.io/react-native-navigation",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Native Navigation"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/aksonov/react-native-router-flux",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-native-router-flux"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/ReactTraining/react-router/tree/master/packages/react-router-native",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-router-native"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"어떤-라이브러리를-사용해야-할까"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#어떤-라이브러리를-사용해야-할까","aria-hidden":"true"}},[t._v("#")]),t._v(" 어떤 라이브러리를 사용해야 할까?")]),t._v(" "),e("p",[t._v("각 라이브러리는 장점과 단점을 가지고 있습니다. 프로젝트를 시작할 때 개발자는 사용하고자 하는 라이브러리의 장/단점을 파악한 후,\n프로젝트에 적합한 라이브러리를 확장해야 합니다. 문제는 적지 않은 수의 라이브러리를 모두 살펴보고 비교하는데 적지 않은 시간이 든다는 것이겠죠.\n다행히 React Naviagtion 라이브러리 진영은 사용자의 이러한 고민을 해결하는데 도움을 주는 "),e("a",{attrs:{href:"https://reactnavigation.org/docs/en/pitch.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pitch & anti-pitch"),e("OutboundLink")],1),t._v(" 문서를\n제공합니다.")]),t._v(" "),e("base-img",{staticStyle:{"max-width":"110px",margin:"3rem auto 1rem"},attrs:{src:"react-navigation-logo.png"}}),t._v(" "),e("h2",{attrs:{id:"react-navigation의-장-단점"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-navigation의-장-단점","aria-hidden":"true"}},[t._v("#")]),t._v(" React Navigation의 장/단점")]),t._v(" "),e("p",[e("strong",[t._v("장점")])]),t._v(" "),e("p",[t._v("React Navigation 라이브러리의 장점은 모든 것을 React Native 위에서 JavaScript(ES6+)로 작성할 수 있다는 점입니다.\n예를 들어 "),e("a",{attrs:{href:"https://facebook.github.io/react-native/docs/animated",target:"_blank",rel:"noopener noreferrer"}},[t._v("Animated"),e("OutboundLink")],1),t._v(" API와 네이티브 드라이버 옵션을 사용하여\n메인 스레드에서 애니메이션을 실행하고 부드러운(60fps) 트랜지션 모션을 생성합니다. 저 수준의 프리미티브(예: 애니메이션, 제스처 등)를\n제외한 나머지를 모두 JavaScript를 사용해 작성하면 다음과 같은 많은 이점이 있습니다.")]),t._v(" "),e("ul",[e("li",[t._v("편리한 "),e("a",{attrs:{href:"https://trend21c.tistory.com/1161",target:"_blank",rel:"noopener noreferrer"}},[t._v("OTA(Over The Air)"),e("OutboundLink")],1),t._v(" 업데이트")]),t._v(" "),e("li",[t._v("디버깅 업데이트")]),t._v(" "),e("li",[t._v("커스터마이징")])]),t._v(" "),e("p",[t._v("일반적으로 앱은 네비게이션을 커스터마이징 합니다. 네이티브 코드를 많이 작성해야 하는 네비게이션을 감싸는 API가 이를 수행해줍니다.\n스텐다드 내비게이터와 깨끗하게 통합되는 커스터마이징 내비게이션을 손쉽게 만들 수 있거나, 스텐다드 내비게이터를 포크(fork)하여\n앱에서 요구되는 정확한 모양과 느낌으로 커스터마징 한 버전을 만들기가 쉽습니다.")]),t._v(" "),e("p",[e("strong",[t._v("단점")])]),t._v(" "),e("p",[t._v("하지만 React Navigation은 네이티브 모바일 플랫폼(iOS, Android)의 기본 내비게이션 API를 직접 사용하지 않습니다. 그러므로 정확한 플랫폼의 동작이\n필요할 경우, 플랫폼 API를 래핑하는 다른 라이브러리(예: React Native Navigation)을 사용하는 것이 좋습니다. 네이티브 모바일 플랫폼 API가 아닌, JavaScript를 사용하면\n스레드를 차단하는 것에 대한 우려가 있습니다.")]),t._v(" "),e("br"),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("정리하면")]),t._v(" "),e("p",[t._v("네이티브 모바일 프로그래밍 보다 JavaScript 프로그래밍에 친숙하면 React Navigation 라이브러리를, 네이티브 기본 내비게이션 API를 직접 사용하지 않는 것에 대해 우려된다면 네이티브 모바일 플랫폼 API를 래핑하는 React Native Navigation을 사용해보세요.")])])],1)},[],!1,null,null,null);a.default=n.exports}}]);